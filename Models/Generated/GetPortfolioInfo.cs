// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: qlua/rpc/getPortfolioInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Qlua.Rpc.GetPortfolioInfo {

  /// <summary>Holder for reflection information generated from qlua/rpc/getPortfolioInfo.proto</summary>
  public static partial class GetPortfolioInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for qlua/rpc/getPortfolioInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GetPortfolioInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9xbHVhL3JwYy9nZXRQb3J0Zm9saW9JbmZvLnByb3RvEhlxbHVhLnJwYy5n",
            "ZXRQb3J0Zm9saW9JbmZvIuoGCg1Qb3J0Zm9saW9JbmZvEhMKC2lzX2xldmVy",
            "YWdlGAEgASgJEhEKCWluX2Fzc2V0cxgCIAEoCRIQCghsZXZlcmFnZRgDIAEo",
            "CRISCgpvcGVuX2xpbWl0GAQgASgJEhEKCXZhbF9zaG9ydBgFIAEoCRIQCgh2",
            "YWxfbG9uZxgGIAEoCRIXCg92YWxfbG9uZ19tYXJnaW4YByABKAkSFgoOdmFs",
            "X2xvbmdfYXNzZXQYCCABKAkSDgoGYXNzZXRzGAkgASgJEhQKDGN1cl9sZXZl",
            "cmFnZRgKIAEoCRIOCgZtYXJnaW4YCyABKAkSDwoHbGltX2FsbBgMIAEoCRIS",
            "Cgphdl9saW1fYWxsGA0gASgJEhIKCmxvY2tlZF9idXkYDiABKAkSGQoRbG9j",
            "a2VkX2J1eV9tYXJnaW4YDyABKAkSGAoQbG9ja2VkX2J1eV9hc3NldBgQIAEo",
            "CRITCgtsb2NrZWRfc2VsbBgRIAEoCRIZChFsb2NrZWRfdmFsdWVfY29lZhgS",
            "IAEoCRIVCg1pbl9hbGxfYXNzZXRzGBMgASgJEhIKCmFsbF9hc3NldHMYFCAB",
            "KAkSEwoLcHJvZml0X2xvc3MYFSABKAkSEwoLcmF0ZV9jaGFuZ2UYFiABKAkS",
            "DwoHbGltX2J1eRgXIAEoCRIQCghsaW1fc2VsbBgYIAEoCRIWCg5saW1fbm9u",
            "X21hcmdpbhgZIAEoCRIVCg1saW1fYnV5X2Fzc2V0GBogASgJEhUKDXZhbF9z",
            "aG9ydF9uZXQYGyABKAkSFAoMdmFsX2xvbmdfbmV0GBwgASgJEhcKD3RvdGFs",
            "X21vbmV5X2JhbBgdIAEoCRIaChJ0b3RhbF9sb2NrZWRfbW9uZXkYHiABKAkS",
            "EAoIaGFpcmN1dHMYHyABKAkSGQoRYXNzZXRzX3dpdGhvdXRfaGMYICABKAkS",
            "EwoLc3RhdHVzX2NvZWYYISABKAkSEQoJdmFybWFyZ2luGCIgASgJEhgKEGdv",
            "X2Zvcl9wb3NpdGlvbnMYIyABKAkSFQoNZ29fZm9yX29yZGVycxgkIAEoCRIU",
            "CgxyYXRlX2Z1dHVyZXMYJSABKAkSFgoOaXNfcXVhbF9jbGllbnQYJiABKAkS",
            "EgoKaXNfZnV0dXJlcxgnIAEoCRIQCghjdXJyX3RhZxgoIAEoCSIsCgRBcmdz",
            "Eg8KB2Zpcm1faWQYASABKAkSEwoLY2xpZW50X2NvZGUYAiABKAkiSgoGUmVz",
            "dWx0EkAKDnBvcnRmb2xpb19pbmZvGAEgASgLMigucWx1YS5ycGMuZ2V0UG9y",
            "dGZvbGlvSW5mby5Qb3J0Zm9saW9JbmZvQgwKCHFsdWEucnBjSAFiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Qlua.Rpc.GetPortfolioInfo.PortfolioInfo), global::Qlua.Rpc.GetPortfolioInfo.PortfolioInfo.Parser, new[]{ "IsLeverage", "InAssets", "Leverage", "OpenLimit", "ValShort", "ValLong", "ValLongMargin", "ValLongAsset", "Assets", "CurLeverage", "Margin", "LimAll", "AvLimAll", "LockedBuy", "LockedBuyMargin", "LockedBuyAsset", "LockedSell", "LockedValueCoef", "InAllAssets", "AllAssets", "ProfitLoss", "RateChange", "LimBuy", "LimSell", "LimNonMargin", "LimBuyAsset", "ValShortNet", "ValLongNet", "TotalMoneyBal", "TotalLockedMoney", "Haircuts", "AssetsWithoutHc", "StatusCoef", "Varmargin", "GoForPositions", "GoForOrders", "RateFutures", "IsQualClient", "IsFutures", "CurrTag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qlua.Rpc.GetPortfolioInfo.Args), global::Qlua.Rpc.GetPortfolioInfo.Args.Parser, new[]{ "FirmId", "ClientCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qlua.Rpc.GetPortfolioInfo.Result), global::Qlua.Rpc.GetPortfolioInfo.Result.Parser, new[]{ "PortfolioInfo" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PortfolioInfo : pb::IMessage<PortfolioInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PortfolioInfo> _parser = new pb::MessageParser<PortfolioInfo>(() => new PortfolioInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PortfolioInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Qlua.Rpc.GetPortfolioInfo.GetPortfolioInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PortfolioInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PortfolioInfo(PortfolioInfo other) : this() {
      isLeverage_ = other.isLeverage_;
      inAssets_ = other.inAssets_;
      leverage_ = other.leverage_;
      openLimit_ = other.openLimit_;
      valShort_ = other.valShort_;
      valLong_ = other.valLong_;
      valLongMargin_ = other.valLongMargin_;
      valLongAsset_ = other.valLongAsset_;
      assets_ = other.assets_;
      curLeverage_ = other.curLeverage_;
      margin_ = other.margin_;
      limAll_ = other.limAll_;
      avLimAll_ = other.avLimAll_;
      lockedBuy_ = other.lockedBuy_;
      lockedBuyMargin_ = other.lockedBuyMargin_;
      lockedBuyAsset_ = other.lockedBuyAsset_;
      lockedSell_ = other.lockedSell_;
      lockedValueCoef_ = other.lockedValueCoef_;
      inAllAssets_ = other.inAllAssets_;
      allAssets_ = other.allAssets_;
      profitLoss_ = other.profitLoss_;
      rateChange_ = other.rateChange_;
      limBuy_ = other.limBuy_;
      limSell_ = other.limSell_;
      limNonMargin_ = other.limNonMargin_;
      limBuyAsset_ = other.limBuyAsset_;
      valShortNet_ = other.valShortNet_;
      valLongNet_ = other.valLongNet_;
      totalMoneyBal_ = other.totalMoneyBal_;
      totalLockedMoney_ = other.totalLockedMoney_;
      haircuts_ = other.haircuts_;
      assetsWithoutHc_ = other.assetsWithoutHc_;
      statusCoef_ = other.statusCoef_;
      varmargin_ = other.varmargin_;
      goForPositions_ = other.goForPositions_;
      goForOrders_ = other.goForOrders_;
      rateFutures_ = other.rateFutures_;
      isQualClient_ = other.isQualClient_;
      isFutures_ = other.isFutures_;
      currTag_ = other.currTag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PortfolioInfo Clone() {
      return new PortfolioInfo(this);
    }

    /// <summary>Field number for the "is_leverage" field.</summary>
    public const int IsLeverageFieldNumber = 1;
    private string isLeverage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IsLeverage {
      get { return isLeverage_; }
      set {
        isLeverage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "in_assets" field.</summary>
    public const int InAssetsFieldNumber = 2;
    private string inAssets_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InAssets {
      get { return inAssets_; }
      set {
        inAssets_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "leverage" field.</summary>
    public const int LeverageFieldNumber = 3;
    private string leverage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Leverage {
      get { return leverage_; }
      set {
        leverage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "open_limit" field.</summary>
    public const int OpenLimitFieldNumber = 4;
    private string openLimit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OpenLimit {
      get { return openLimit_; }
      set {
        openLimit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "val_short" field.</summary>
    public const int ValShortFieldNumber = 5;
    private string valShort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ValShort {
      get { return valShort_; }
      set {
        valShort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "val_long" field.</summary>
    public const int ValLongFieldNumber = 6;
    private string valLong_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ValLong {
      get { return valLong_; }
      set {
        valLong_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "val_long_margin" field.</summary>
    public const int ValLongMarginFieldNumber = 7;
    private string valLongMargin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ValLongMargin {
      get { return valLongMargin_; }
      set {
        valLongMargin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "val_long_asset" field.</summary>
    public const int ValLongAssetFieldNumber = 8;
    private string valLongAsset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ValLongAsset {
      get { return valLongAsset_; }
      set {
        valLongAsset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "assets" field.</summary>
    public const int AssetsFieldNumber = 9;
    private string assets_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Assets {
      get { return assets_; }
      set {
        assets_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cur_leverage" field.</summary>
    public const int CurLeverageFieldNumber = 10;
    private string curLeverage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CurLeverage {
      get { return curLeverage_; }
      set {
        curLeverage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "margin" field.</summary>
    public const int MarginFieldNumber = 11;
    private string margin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Margin {
      get { return margin_; }
      set {
        margin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lim_all" field.</summary>
    public const int LimAllFieldNumber = 12;
    private string limAll_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LimAll {
      get { return limAll_; }
      set {
        limAll_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "av_lim_all" field.</summary>
    public const int AvLimAllFieldNumber = 13;
    private string avLimAll_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AvLimAll {
      get { return avLimAll_; }
      set {
        avLimAll_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locked_buy" field.</summary>
    public const int LockedBuyFieldNumber = 14;
    private string lockedBuy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LockedBuy {
      get { return lockedBuy_; }
      set {
        lockedBuy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locked_buy_margin" field.</summary>
    public const int LockedBuyMarginFieldNumber = 15;
    private string lockedBuyMargin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LockedBuyMargin {
      get { return lockedBuyMargin_; }
      set {
        lockedBuyMargin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locked_buy_asset" field.</summary>
    public const int LockedBuyAssetFieldNumber = 16;
    private string lockedBuyAsset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LockedBuyAsset {
      get { return lockedBuyAsset_; }
      set {
        lockedBuyAsset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locked_sell" field.</summary>
    public const int LockedSellFieldNumber = 17;
    private string lockedSell_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LockedSell {
      get { return lockedSell_; }
      set {
        lockedSell_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locked_value_coef" field.</summary>
    public const int LockedValueCoefFieldNumber = 18;
    private string lockedValueCoef_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LockedValueCoef {
      get { return lockedValueCoef_; }
      set {
        lockedValueCoef_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "in_all_assets" field.</summary>
    public const int InAllAssetsFieldNumber = 19;
    private string inAllAssets_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InAllAssets {
      get { return inAllAssets_; }
      set {
        inAllAssets_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "all_assets" field.</summary>
    public const int AllAssetsFieldNumber = 20;
    private string allAssets_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AllAssets {
      get { return allAssets_; }
      set {
        allAssets_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "profit_loss" field.</summary>
    public const int ProfitLossFieldNumber = 21;
    private string profitLoss_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProfitLoss {
      get { return profitLoss_; }
      set {
        profitLoss_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rate_change" field.</summary>
    public const int RateChangeFieldNumber = 22;
    private string rateChange_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RateChange {
      get { return rateChange_; }
      set {
        rateChange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lim_buy" field.</summary>
    public const int LimBuyFieldNumber = 23;
    private string limBuy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LimBuy {
      get { return limBuy_; }
      set {
        limBuy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lim_sell" field.</summary>
    public const int LimSellFieldNumber = 24;
    private string limSell_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LimSell {
      get { return limSell_; }
      set {
        limSell_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lim_non_margin" field.</summary>
    public const int LimNonMarginFieldNumber = 25;
    private string limNonMargin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LimNonMargin {
      get { return limNonMargin_; }
      set {
        limNonMargin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lim_buy_asset" field.</summary>
    public const int LimBuyAssetFieldNumber = 26;
    private string limBuyAsset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LimBuyAsset {
      get { return limBuyAsset_; }
      set {
        limBuyAsset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "val_short_net" field.</summary>
    public const int ValShortNetFieldNumber = 27;
    private string valShortNet_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ValShortNet {
      get { return valShortNet_; }
      set {
        valShortNet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "val_long_net" field.</summary>
    public const int ValLongNetFieldNumber = 28;
    private string valLongNet_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ValLongNet {
      get { return valLongNet_; }
      set {
        valLongNet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_money_bal" field.</summary>
    public const int TotalMoneyBalFieldNumber = 29;
    private string totalMoneyBal_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TotalMoneyBal {
      get { return totalMoneyBal_; }
      set {
        totalMoneyBal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_locked_money" field.</summary>
    public const int TotalLockedMoneyFieldNumber = 30;
    private string totalLockedMoney_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TotalLockedMoney {
      get { return totalLockedMoney_; }
      set {
        totalLockedMoney_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "haircuts" field.</summary>
    public const int HaircutsFieldNumber = 31;
    private string haircuts_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Haircuts {
      get { return haircuts_; }
      set {
        haircuts_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "assets_without_hc" field.</summary>
    public const int AssetsWithoutHcFieldNumber = 32;
    private string assetsWithoutHc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AssetsWithoutHc {
      get { return assetsWithoutHc_; }
      set {
        assetsWithoutHc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status_coef" field.</summary>
    public const int StatusCoefFieldNumber = 33;
    private string statusCoef_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StatusCoef {
      get { return statusCoef_; }
      set {
        statusCoef_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "varmargin" field.</summary>
    public const int VarmarginFieldNumber = 34;
    private string varmargin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Varmargin {
      get { return varmargin_; }
      set {
        varmargin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "go_for_positions" field.</summary>
    public const int GoForPositionsFieldNumber = 35;
    private string goForPositions_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GoForPositions {
      get { return goForPositions_; }
      set {
        goForPositions_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "go_for_orders" field.</summary>
    public const int GoForOrdersFieldNumber = 36;
    private string goForOrders_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GoForOrders {
      get { return goForOrders_; }
      set {
        goForOrders_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rate_futures" field.</summary>
    public const int RateFuturesFieldNumber = 37;
    private string rateFutures_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RateFutures {
      get { return rateFutures_; }
      set {
        rateFutures_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_qual_client" field.</summary>
    public const int IsQualClientFieldNumber = 38;
    private string isQualClient_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IsQualClient {
      get { return isQualClient_; }
      set {
        isQualClient_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_futures" field.</summary>
    public const int IsFuturesFieldNumber = 39;
    private string isFutures_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IsFutures {
      get { return isFutures_; }
      set {
        isFutures_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "curr_tag" field.</summary>
    public const int CurrTagFieldNumber = 40;
    private string currTag_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CurrTag {
      get { return currTag_; }
      set {
        currTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PortfolioInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PortfolioInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsLeverage != other.IsLeverage) return false;
      if (InAssets != other.InAssets) return false;
      if (Leverage != other.Leverage) return false;
      if (OpenLimit != other.OpenLimit) return false;
      if (ValShort != other.ValShort) return false;
      if (ValLong != other.ValLong) return false;
      if (ValLongMargin != other.ValLongMargin) return false;
      if (ValLongAsset != other.ValLongAsset) return false;
      if (Assets != other.Assets) return false;
      if (CurLeverage != other.CurLeverage) return false;
      if (Margin != other.Margin) return false;
      if (LimAll != other.LimAll) return false;
      if (AvLimAll != other.AvLimAll) return false;
      if (LockedBuy != other.LockedBuy) return false;
      if (LockedBuyMargin != other.LockedBuyMargin) return false;
      if (LockedBuyAsset != other.LockedBuyAsset) return false;
      if (LockedSell != other.LockedSell) return false;
      if (LockedValueCoef != other.LockedValueCoef) return false;
      if (InAllAssets != other.InAllAssets) return false;
      if (AllAssets != other.AllAssets) return false;
      if (ProfitLoss != other.ProfitLoss) return false;
      if (RateChange != other.RateChange) return false;
      if (LimBuy != other.LimBuy) return false;
      if (LimSell != other.LimSell) return false;
      if (LimNonMargin != other.LimNonMargin) return false;
      if (LimBuyAsset != other.LimBuyAsset) return false;
      if (ValShortNet != other.ValShortNet) return false;
      if (ValLongNet != other.ValLongNet) return false;
      if (TotalMoneyBal != other.TotalMoneyBal) return false;
      if (TotalLockedMoney != other.TotalLockedMoney) return false;
      if (Haircuts != other.Haircuts) return false;
      if (AssetsWithoutHc != other.AssetsWithoutHc) return false;
      if (StatusCoef != other.StatusCoef) return false;
      if (Varmargin != other.Varmargin) return false;
      if (GoForPositions != other.GoForPositions) return false;
      if (GoForOrders != other.GoForOrders) return false;
      if (RateFutures != other.RateFutures) return false;
      if (IsQualClient != other.IsQualClient) return false;
      if (IsFutures != other.IsFutures) return false;
      if (CurrTag != other.CurrTag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsLeverage.Length != 0) hash ^= IsLeverage.GetHashCode();
      if (InAssets.Length != 0) hash ^= InAssets.GetHashCode();
      if (Leverage.Length != 0) hash ^= Leverage.GetHashCode();
      if (OpenLimit.Length != 0) hash ^= OpenLimit.GetHashCode();
      if (ValShort.Length != 0) hash ^= ValShort.GetHashCode();
      if (ValLong.Length != 0) hash ^= ValLong.GetHashCode();
      if (ValLongMargin.Length != 0) hash ^= ValLongMargin.GetHashCode();
      if (ValLongAsset.Length != 0) hash ^= ValLongAsset.GetHashCode();
      if (Assets.Length != 0) hash ^= Assets.GetHashCode();
      if (CurLeverage.Length != 0) hash ^= CurLeverage.GetHashCode();
      if (Margin.Length != 0) hash ^= Margin.GetHashCode();
      if (LimAll.Length != 0) hash ^= LimAll.GetHashCode();
      if (AvLimAll.Length != 0) hash ^= AvLimAll.GetHashCode();
      if (LockedBuy.Length != 0) hash ^= LockedBuy.GetHashCode();
      if (LockedBuyMargin.Length != 0) hash ^= LockedBuyMargin.GetHashCode();
      if (LockedBuyAsset.Length != 0) hash ^= LockedBuyAsset.GetHashCode();
      if (LockedSell.Length != 0) hash ^= LockedSell.GetHashCode();
      if (LockedValueCoef.Length != 0) hash ^= LockedValueCoef.GetHashCode();
      if (InAllAssets.Length != 0) hash ^= InAllAssets.GetHashCode();
      if (AllAssets.Length != 0) hash ^= AllAssets.GetHashCode();
      if (ProfitLoss.Length != 0) hash ^= ProfitLoss.GetHashCode();
      if (RateChange.Length != 0) hash ^= RateChange.GetHashCode();
      if (LimBuy.Length != 0) hash ^= LimBuy.GetHashCode();
      if (LimSell.Length != 0) hash ^= LimSell.GetHashCode();
      if (LimNonMargin.Length != 0) hash ^= LimNonMargin.GetHashCode();
      if (LimBuyAsset.Length != 0) hash ^= LimBuyAsset.GetHashCode();
      if (ValShortNet.Length != 0) hash ^= ValShortNet.GetHashCode();
      if (ValLongNet.Length != 0) hash ^= ValLongNet.GetHashCode();
      if (TotalMoneyBal.Length != 0) hash ^= TotalMoneyBal.GetHashCode();
      if (TotalLockedMoney.Length != 0) hash ^= TotalLockedMoney.GetHashCode();
      if (Haircuts.Length != 0) hash ^= Haircuts.GetHashCode();
      if (AssetsWithoutHc.Length != 0) hash ^= AssetsWithoutHc.GetHashCode();
      if (StatusCoef.Length != 0) hash ^= StatusCoef.GetHashCode();
      if (Varmargin.Length != 0) hash ^= Varmargin.GetHashCode();
      if (GoForPositions.Length != 0) hash ^= GoForPositions.GetHashCode();
      if (GoForOrders.Length != 0) hash ^= GoForOrders.GetHashCode();
      if (RateFutures.Length != 0) hash ^= RateFutures.GetHashCode();
      if (IsQualClient.Length != 0) hash ^= IsQualClient.GetHashCode();
      if (IsFutures.Length != 0) hash ^= IsFutures.GetHashCode();
      if (CurrTag.Length != 0) hash ^= CurrTag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsLeverage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IsLeverage);
      }
      if (InAssets.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InAssets);
      }
      if (Leverage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Leverage);
      }
      if (OpenLimit.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OpenLimit);
      }
      if (ValShort.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ValShort);
      }
      if (ValLong.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ValLong);
      }
      if (ValLongMargin.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ValLongMargin);
      }
      if (ValLongAsset.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ValLongAsset);
      }
      if (Assets.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Assets);
      }
      if (CurLeverage.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CurLeverage);
      }
      if (Margin.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Margin);
      }
      if (LimAll.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(LimAll);
      }
      if (AvLimAll.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(AvLimAll);
      }
      if (LockedBuy.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(LockedBuy);
      }
      if (LockedBuyMargin.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(LockedBuyMargin);
      }
      if (LockedBuyAsset.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(LockedBuyAsset);
      }
      if (LockedSell.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(LockedSell);
      }
      if (LockedValueCoef.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(LockedValueCoef);
      }
      if (InAllAssets.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(InAllAssets);
      }
      if (AllAssets.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(AllAssets);
      }
      if (ProfitLoss.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ProfitLoss);
      }
      if (RateChange.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(RateChange);
      }
      if (LimBuy.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(LimBuy);
      }
      if (LimSell.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(LimSell);
      }
      if (LimNonMargin.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(LimNonMargin);
      }
      if (LimBuyAsset.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(LimBuyAsset);
      }
      if (ValShortNet.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(ValShortNet);
      }
      if (ValLongNet.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(ValLongNet);
      }
      if (TotalMoneyBal.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(TotalMoneyBal);
      }
      if (TotalLockedMoney.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(TotalLockedMoney);
      }
      if (Haircuts.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(Haircuts);
      }
      if (AssetsWithoutHc.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(AssetsWithoutHc);
      }
      if (StatusCoef.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(StatusCoef);
      }
      if (Varmargin.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(Varmargin);
      }
      if (GoForPositions.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(GoForPositions);
      }
      if (GoForOrders.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(GoForOrders);
      }
      if (RateFutures.Length != 0) {
        output.WriteRawTag(170, 2);
        output.WriteString(RateFutures);
      }
      if (IsQualClient.Length != 0) {
        output.WriteRawTag(178, 2);
        output.WriteString(IsQualClient);
      }
      if (IsFutures.Length != 0) {
        output.WriteRawTag(186, 2);
        output.WriteString(IsFutures);
      }
      if (CurrTag.Length != 0) {
        output.WriteRawTag(194, 2);
        output.WriteString(CurrTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsLeverage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IsLeverage);
      }
      if (InAssets.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InAssets);
      }
      if (Leverage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Leverage);
      }
      if (OpenLimit.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OpenLimit);
      }
      if (ValShort.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ValShort);
      }
      if (ValLong.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ValLong);
      }
      if (ValLongMargin.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ValLongMargin);
      }
      if (ValLongAsset.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ValLongAsset);
      }
      if (Assets.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Assets);
      }
      if (CurLeverage.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CurLeverage);
      }
      if (Margin.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Margin);
      }
      if (LimAll.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(LimAll);
      }
      if (AvLimAll.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(AvLimAll);
      }
      if (LockedBuy.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(LockedBuy);
      }
      if (LockedBuyMargin.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(LockedBuyMargin);
      }
      if (LockedBuyAsset.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(LockedBuyAsset);
      }
      if (LockedSell.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(LockedSell);
      }
      if (LockedValueCoef.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(LockedValueCoef);
      }
      if (InAllAssets.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(InAllAssets);
      }
      if (AllAssets.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(AllAssets);
      }
      if (ProfitLoss.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ProfitLoss);
      }
      if (RateChange.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(RateChange);
      }
      if (LimBuy.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(LimBuy);
      }
      if (LimSell.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(LimSell);
      }
      if (LimNonMargin.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(LimNonMargin);
      }
      if (LimBuyAsset.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(LimBuyAsset);
      }
      if (ValShortNet.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(ValShortNet);
      }
      if (ValLongNet.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(ValLongNet);
      }
      if (TotalMoneyBal.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(TotalMoneyBal);
      }
      if (TotalLockedMoney.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(TotalLockedMoney);
      }
      if (Haircuts.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(Haircuts);
      }
      if (AssetsWithoutHc.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(AssetsWithoutHc);
      }
      if (StatusCoef.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(StatusCoef);
      }
      if (Varmargin.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(Varmargin);
      }
      if (GoForPositions.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(GoForPositions);
      }
      if (GoForOrders.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(GoForOrders);
      }
      if (RateFutures.Length != 0) {
        output.WriteRawTag(170, 2);
        output.WriteString(RateFutures);
      }
      if (IsQualClient.Length != 0) {
        output.WriteRawTag(178, 2);
        output.WriteString(IsQualClient);
      }
      if (IsFutures.Length != 0) {
        output.WriteRawTag(186, 2);
        output.WriteString(IsFutures);
      }
      if (CurrTag.Length != 0) {
        output.WriteRawTag(194, 2);
        output.WriteString(CurrTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsLeverage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IsLeverage);
      }
      if (InAssets.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InAssets);
      }
      if (Leverage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Leverage);
      }
      if (OpenLimit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OpenLimit);
      }
      if (ValShort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValShort);
      }
      if (ValLong.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValLong);
      }
      if (ValLongMargin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValLongMargin);
      }
      if (ValLongAsset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValLongAsset);
      }
      if (Assets.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Assets);
      }
      if (CurLeverage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurLeverage);
      }
      if (Margin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Margin);
      }
      if (LimAll.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LimAll);
      }
      if (AvLimAll.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvLimAll);
      }
      if (LockedBuy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LockedBuy);
      }
      if (LockedBuyMargin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LockedBuyMargin);
      }
      if (LockedBuyAsset.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LockedBuyAsset);
      }
      if (LockedSell.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LockedSell);
      }
      if (LockedValueCoef.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LockedValueCoef);
      }
      if (InAllAssets.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InAllAssets);
      }
      if (AllAssets.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AllAssets);
      }
      if (ProfitLoss.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ProfitLoss);
      }
      if (RateChange.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RateChange);
      }
      if (LimBuy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LimBuy);
      }
      if (LimSell.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LimSell);
      }
      if (LimNonMargin.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LimNonMargin);
      }
      if (LimBuyAsset.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LimBuyAsset);
      }
      if (ValShortNet.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ValShortNet);
      }
      if (ValLongNet.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ValLongNet);
      }
      if (TotalMoneyBal.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TotalMoneyBal);
      }
      if (TotalLockedMoney.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TotalLockedMoney);
      }
      if (Haircuts.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Haircuts);
      }
      if (AssetsWithoutHc.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AssetsWithoutHc);
      }
      if (StatusCoef.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StatusCoef);
      }
      if (Varmargin.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Varmargin);
      }
      if (GoForPositions.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GoForPositions);
      }
      if (GoForOrders.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GoForOrders);
      }
      if (RateFutures.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RateFutures);
      }
      if (IsQualClient.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(IsQualClient);
      }
      if (IsFutures.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(IsFutures);
      }
      if (CurrTag.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CurrTag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PortfolioInfo other) {
      if (other == null) {
        return;
      }
      if (other.IsLeverage.Length != 0) {
        IsLeverage = other.IsLeverage;
      }
      if (other.InAssets.Length != 0) {
        InAssets = other.InAssets;
      }
      if (other.Leverage.Length != 0) {
        Leverage = other.Leverage;
      }
      if (other.OpenLimit.Length != 0) {
        OpenLimit = other.OpenLimit;
      }
      if (other.ValShort.Length != 0) {
        ValShort = other.ValShort;
      }
      if (other.ValLong.Length != 0) {
        ValLong = other.ValLong;
      }
      if (other.ValLongMargin.Length != 0) {
        ValLongMargin = other.ValLongMargin;
      }
      if (other.ValLongAsset.Length != 0) {
        ValLongAsset = other.ValLongAsset;
      }
      if (other.Assets.Length != 0) {
        Assets = other.Assets;
      }
      if (other.CurLeverage.Length != 0) {
        CurLeverage = other.CurLeverage;
      }
      if (other.Margin.Length != 0) {
        Margin = other.Margin;
      }
      if (other.LimAll.Length != 0) {
        LimAll = other.LimAll;
      }
      if (other.AvLimAll.Length != 0) {
        AvLimAll = other.AvLimAll;
      }
      if (other.LockedBuy.Length != 0) {
        LockedBuy = other.LockedBuy;
      }
      if (other.LockedBuyMargin.Length != 0) {
        LockedBuyMargin = other.LockedBuyMargin;
      }
      if (other.LockedBuyAsset.Length != 0) {
        LockedBuyAsset = other.LockedBuyAsset;
      }
      if (other.LockedSell.Length != 0) {
        LockedSell = other.LockedSell;
      }
      if (other.LockedValueCoef.Length != 0) {
        LockedValueCoef = other.LockedValueCoef;
      }
      if (other.InAllAssets.Length != 0) {
        InAllAssets = other.InAllAssets;
      }
      if (other.AllAssets.Length != 0) {
        AllAssets = other.AllAssets;
      }
      if (other.ProfitLoss.Length != 0) {
        ProfitLoss = other.ProfitLoss;
      }
      if (other.RateChange.Length != 0) {
        RateChange = other.RateChange;
      }
      if (other.LimBuy.Length != 0) {
        LimBuy = other.LimBuy;
      }
      if (other.LimSell.Length != 0) {
        LimSell = other.LimSell;
      }
      if (other.LimNonMargin.Length != 0) {
        LimNonMargin = other.LimNonMargin;
      }
      if (other.LimBuyAsset.Length != 0) {
        LimBuyAsset = other.LimBuyAsset;
      }
      if (other.ValShortNet.Length != 0) {
        ValShortNet = other.ValShortNet;
      }
      if (other.ValLongNet.Length != 0) {
        ValLongNet = other.ValLongNet;
      }
      if (other.TotalMoneyBal.Length != 0) {
        TotalMoneyBal = other.TotalMoneyBal;
      }
      if (other.TotalLockedMoney.Length != 0) {
        TotalLockedMoney = other.TotalLockedMoney;
      }
      if (other.Haircuts.Length != 0) {
        Haircuts = other.Haircuts;
      }
      if (other.AssetsWithoutHc.Length != 0) {
        AssetsWithoutHc = other.AssetsWithoutHc;
      }
      if (other.StatusCoef.Length != 0) {
        StatusCoef = other.StatusCoef;
      }
      if (other.Varmargin.Length != 0) {
        Varmargin = other.Varmargin;
      }
      if (other.GoForPositions.Length != 0) {
        GoForPositions = other.GoForPositions;
      }
      if (other.GoForOrders.Length != 0) {
        GoForOrders = other.GoForOrders;
      }
      if (other.RateFutures.Length != 0) {
        RateFutures = other.RateFutures;
      }
      if (other.IsQualClient.Length != 0) {
        IsQualClient = other.IsQualClient;
      }
      if (other.IsFutures.Length != 0) {
        IsFutures = other.IsFutures;
      }
      if (other.CurrTag.Length != 0) {
        CurrTag = other.CurrTag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IsLeverage = input.ReadString();
            break;
          }
          case 18: {
            InAssets = input.ReadString();
            break;
          }
          case 26: {
            Leverage = input.ReadString();
            break;
          }
          case 34: {
            OpenLimit = input.ReadString();
            break;
          }
          case 42: {
            ValShort = input.ReadString();
            break;
          }
          case 50: {
            ValLong = input.ReadString();
            break;
          }
          case 58: {
            ValLongMargin = input.ReadString();
            break;
          }
          case 66: {
            ValLongAsset = input.ReadString();
            break;
          }
          case 74: {
            Assets = input.ReadString();
            break;
          }
          case 82: {
            CurLeverage = input.ReadString();
            break;
          }
          case 90: {
            Margin = input.ReadString();
            break;
          }
          case 98: {
            LimAll = input.ReadString();
            break;
          }
          case 106: {
            AvLimAll = input.ReadString();
            break;
          }
          case 114: {
            LockedBuy = input.ReadString();
            break;
          }
          case 122: {
            LockedBuyMargin = input.ReadString();
            break;
          }
          case 130: {
            LockedBuyAsset = input.ReadString();
            break;
          }
          case 138: {
            LockedSell = input.ReadString();
            break;
          }
          case 146: {
            LockedValueCoef = input.ReadString();
            break;
          }
          case 154: {
            InAllAssets = input.ReadString();
            break;
          }
          case 162: {
            AllAssets = input.ReadString();
            break;
          }
          case 170: {
            ProfitLoss = input.ReadString();
            break;
          }
          case 178: {
            RateChange = input.ReadString();
            break;
          }
          case 186: {
            LimBuy = input.ReadString();
            break;
          }
          case 194: {
            LimSell = input.ReadString();
            break;
          }
          case 202: {
            LimNonMargin = input.ReadString();
            break;
          }
          case 210: {
            LimBuyAsset = input.ReadString();
            break;
          }
          case 218: {
            ValShortNet = input.ReadString();
            break;
          }
          case 226: {
            ValLongNet = input.ReadString();
            break;
          }
          case 234: {
            TotalMoneyBal = input.ReadString();
            break;
          }
          case 242: {
            TotalLockedMoney = input.ReadString();
            break;
          }
          case 250: {
            Haircuts = input.ReadString();
            break;
          }
          case 258: {
            AssetsWithoutHc = input.ReadString();
            break;
          }
          case 266: {
            StatusCoef = input.ReadString();
            break;
          }
          case 274: {
            Varmargin = input.ReadString();
            break;
          }
          case 282: {
            GoForPositions = input.ReadString();
            break;
          }
          case 290: {
            GoForOrders = input.ReadString();
            break;
          }
          case 298: {
            RateFutures = input.ReadString();
            break;
          }
          case 306: {
            IsQualClient = input.ReadString();
            break;
          }
          case 314: {
            IsFutures = input.ReadString();
            break;
          }
          case 322: {
            CurrTag = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            IsLeverage = input.ReadString();
            break;
          }
          case 18: {
            InAssets = input.ReadString();
            break;
          }
          case 26: {
            Leverage = input.ReadString();
            break;
          }
          case 34: {
            OpenLimit = input.ReadString();
            break;
          }
          case 42: {
            ValShort = input.ReadString();
            break;
          }
          case 50: {
            ValLong = input.ReadString();
            break;
          }
          case 58: {
            ValLongMargin = input.ReadString();
            break;
          }
          case 66: {
            ValLongAsset = input.ReadString();
            break;
          }
          case 74: {
            Assets = input.ReadString();
            break;
          }
          case 82: {
            CurLeverage = input.ReadString();
            break;
          }
          case 90: {
            Margin = input.ReadString();
            break;
          }
          case 98: {
            LimAll = input.ReadString();
            break;
          }
          case 106: {
            AvLimAll = input.ReadString();
            break;
          }
          case 114: {
            LockedBuy = input.ReadString();
            break;
          }
          case 122: {
            LockedBuyMargin = input.ReadString();
            break;
          }
          case 130: {
            LockedBuyAsset = input.ReadString();
            break;
          }
          case 138: {
            LockedSell = input.ReadString();
            break;
          }
          case 146: {
            LockedValueCoef = input.ReadString();
            break;
          }
          case 154: {
            InAllAssets = input.ReadString();
            break;
          }
          case 162: {
            AllAssets = input.ReadString();
            break;
          }
          case 170: {
            ProfitLoss = input.ReadString();
            break;
          }
          case 178: {
            RateChange = input.ReadString();
            break;
          }
          case 186: {
            LimBuy = input.ReadString();
            break;
          }
          case 194: {
            LimSell = input.ReadString();
            break;
          }
          case 202: {
            LimNonMargin = input.ReadString();
            break;
          }
          case 210: {
            LimBuyAsset = input.ReadString();
            break;
          }
          case 218: {
            ValShortNet = input.ReadString();
            break;
          }
          case 226: {
            ValLongNet = input.ReadString();
            break;
          }
          case 234: {
            TotalMoneyBal = input.ReadString();
            break;
          }
          case 242: {
            TotalLockedMoney = input.ReadString();
            break;
          }
          case 250: {
            Haircuts = input.ReadString();
            break;
          }
          case 258: {
            AssetsWithoutHc = input.ReadString();
            break;
          }
          case 266: {
            StatusCoef = input.ReadString();
            break;
          }
          case 274: {
            Varmargin = input.ReadString();
            break;
          }
          case 282: {
            GoForPositions = input.ReadString();
            break;
          }
          case 290: {
            GoForOrders = input.ReadString();
            break;
          }
          case 298: {
            RateFutures = input.ReadString();
            break;
          }
          case 306: {
            IsQualClient = input.ReadString();
            break;
          }
          case 314: {
            IsFutures = input.ReadString();
            break;
          }
          case 322: {
            CurrTag = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Args : pb::IMessage<Args>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Args> _parser = new pb::MessageParser<Args>(() => new Args());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Args> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Qlua.Rpc.GetPortfolioInfo.GetPortfolioInfoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Args() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Args(Args other) : this() {
      firmId_ = other.firmId_;
      clientCode_ = other.clientCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Args Clone() {
      return new Args(this);
    }

    /// <summary>Field number for the "firm_id" field.</summary>
    public const int FirmIdFieldNumber = 1;
    private string firmId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FirmId {
      get { return firmId_; }
      set {
        firmId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_code" field.</summary>
    public const int ClientCodeFieldNumber = 2;
    private string clientCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientCode {
      get { return clientCode_; }
      set {
        clientCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Args);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Args other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FirmId != other.FirmId) return false;
      if (ClientCode != other.ClientCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FirmId.Length != 0) hash ^= FirmId.GetHashCode();
      if (ClientCode.Length != 0) hash ^= ClientCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FirmId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FirmId);
      }
      if (ClientCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FirmId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FirmId);
      }
      if (ClientCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FirmId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirmId);
      }
      if (ClientCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Args other) {
      if (other == null) {
        return;
      }
      if (other.FirmId.Length != 0) {
        FirmId = other.FirmId;
      }
      if (other.ClientCode.Length != 0) {
        ClientCode = other.ClientCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FirmId = input.ReadString();
            break;
          }
          case 18: {
            ClientCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FirmId = input.ReadString();
            break;
          }
          case 18: {
            ClientCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Result : pb::IMessage<Result>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Result> _parser = new pb::MessageParser<Result>(() => new Result());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Result> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Qlua.Rpc.GetPortfolioInfo.GetPortfolioInfoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Result() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Result(Result other) : this() {
      portfolioInfo_ = other.portfolioInfo_ != null ? other.portfolioInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Result Clone() {
      return new Result(this);
    }

    /// <summary>Field number for the "portfolio_info" field.</summary>
    public const int PortfolioInfoFieldNumber = 1;
    private global::Qlua.Rpc.GetPortfolioInfo.PortfolioInfo portfolioInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qlua.Rpc.GetPortfolioInfo.PortfolioInfo PortfolioInfo {
      get { return portfolioInfo_; }
      set {
        portfolioInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Result);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Result other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PortfolioInfo, other.PortfolioInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (portfolioInfo_ != null) hash ^= PortfolioInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (portfolioInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PortfolioInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (portfolioInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PortfolioInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (portfolioInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PortfolioInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Result other) {
      if (other == null) {
        return;
      }
      if (other.portfolioInfo_ != null) {
        if (portfolioInfo_ == null) {
          PortfolioInfo = new global::Qlua.Rpc.GetPortfolioInfo.PortfolioInfo();
        }
        PortfolioInfo.MergeFrom(other.PortfolioInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (portfolioInfo_ == null) {
              PortfolioInfo = new global::Qlua.Rpc.GetPortfolioInfo.PortfolioInfo();
            }
            input.ReadMessage(PortfolioInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (portfolioInfo_ == null) {
              PortfolioInfo = new global::Qlua.Rpc.GetPortfolioInfo.PortfolioInfo();
            }
            input.ReadMessage(PortfolioInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
